1. "", ''
    - '' : 문자열 표시할 때 사용
    - "" : 별칭 붙일 때 사용
2. RDB(Relational Data Base) : 관계형 데이터 베이스
    - 관계형 데이터 베이스란 데이터의 이상현상을 방지하고 무결성을 보장하기 위해
      정규화과정을 거쳐 여러개 테이블에 데이터를 분산시켜 저장하는 데이터 베이스
    - Relatinal(관계형) : 분산되어 있는 테이블들간의 관계형
    - 분산되어 있는 데이터를 함께 가져올 때 join과정을 거쳐서 조회
3. Inner join
    - 두 테이블간의 공통된 데이터 조회(교집합)
    - SELECT A.*,
             B.*
        FROM A테이블 A
        (INNER 생략가능) JOIN B테이블 B
                        ON A.공통된 컬럼 = B.공통된 컬럼;
    - SELECT A.*,
             B.*
        FROM A테이블 A,
             B테이블 B
        WHERE A.공통된 컬럼 = B.공통된 컬럼;
    - JOIN 구문 사용 시 주의점 :
                 공통된 컬럼을 조회할 때 어느 테이블의 컬럼을 사용 할 것인지 명시
    - AS : 컬럼 별칭 붙일 때 사용
4. 등가조인과 비등가조인
    - 등가조인 : 조인조건 '=' 등호사용
                공통된 컬럼의 데이터가 같은 데이터 조회
    - 비등가조인 : 조인조건 '>, <, >=, <=' 부등호를 사용하거나
                  BETWEEN AND 구문사용
5. 잘못된 조인(Cross Join)
    - 조인조건을 명시하지 않으면 발생
    - 테이블들의 모든행이 1:1로 교차되어 결과값이 의미가 없어짐
6. 셀프조인
    - 같은 테이블을 조인하여 사용
    - 셀프조인은 조인하는 테이블에 별칭붙이는 게 필수
7. OUTER JOIN(외부 조인)
    - LEFT OUTER JOIN, RIGHT OUTER JOIN
    - 교집합 + 차집합
    - SELECT * FROM 왼쪽 테이블
        LEFT(RIGHT) OUTER JOIN 오른쪽 테이블
                     ON 조인조건;
    - 오라클만 지원하는 LEFT OUTER JOIN
      SELECT * 
        FROM 왼쪽 테이블
           , 오른쪽 테이블
        WHERE 왼쪽 테이블 컬럼 = 오른쪽 테이블 컬럼(+);
    - 오라클만 지원하는 RIGHT OUTER JOIN
      SELECT * 
        FROM 왼쪽 테이블
           , 오른쪽 테이블
        WHERE 왼쪽 테이블 컬럼(+) = 오른쪽 테이블 컬럼;
8. 서브쿼리
    - 서브쿼리는 다수의 쿼리를 결합하여 하나의 쿼리로 표현
    - 단일 행 서브쿼리 : 서브쿼리에서 하나의 컬럼의 하나의 데이터만 반환
    - 다중 행 서브쿼리 : 서브쿼리에서 하나의 컬럼의 다수의 데이터 반환
    - 다중 열 서브쿼리 : 서브쿼리에서 다수 컬럼 반환
    - 조회하는 컬럼이 될 수도 있고, FROM 구문에 테이블 대신 사용 가능
      WHERE 조건으로도 사용 가능
    - 서브쿼리는 항상 괄호로 묶어야됨
    - 메인쿼리가 실행되기 전에 서브쿼리가 먼저 실행돼야 하기 때문
    - 서브쿼리는 새로운 가상의 테이블을 생성한다.
    - 단일 행 서브쿼리는 단일 연산자(=, >, <, <=, >=, !=)와 주로 사용되고
      단일 연산자 오른쪽에 작성
9. 집합연산자
    - 집합연산자는 합집합, 교집합, 차집합을 의미하는 연산자
    - 합집합 연산자 : UNION, UNION ALL
    - 교집합 연산자 : INTERSECT
    - 차집합 연산자 : MINUS
    - UNION : 조회된 결과 합으로 중복된 데이터 제거
    - UNION ALL : 조회되 결과 합으로 중복된 데이터 포함
    - INTERSECT : 양쪽 결과 모두에 포함된 데이터
    - MINUS : 첫 번째 결과에서 두 번째 결과를 제외한 데이터
    - SELECT * FROM 테이블 명
      UNION | UNION ALL | INTERSECT | MINUS
      SELECT * FROM 테이블 명
    - 데이터의 결과는 첫 번째 조회결과로 결정
    - 첫 번째 결과와 두 번째 결과의 컬럼 수, 데이터 타입이 일치해야됨